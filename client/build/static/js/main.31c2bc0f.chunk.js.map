{"version":3,"sources":["pages/AddArtist.js","pages/ArtistProfile.js","components/MapMarker.js","pages/Map.js","App.js","reportWebVitals.js","index.js"],"names":["SpotifyWebApi","require","AddArtist","CLIENT_ID","CLIENT_SECRET","useState","token","setToken","useEffect","axios","post","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","serialize","grant_type","headers","btoa","then","res","data","access_token","catch","err","console","log","spotifApi","clientId","clientSecret","setAccessToken","searchQ","setSearchQ","searchSucess","setSearchSucess","searchResults","setSearchResults","artistSelected","setArtistSelected","setArtistSelected1","longitude","setLongitude","latitude","setLatitude","name","setName","discription","picture","setPicture","Number","popularity","setPopularity","spotifyLink","setSpotifyLink","tracks","setTracks","track1Title","setTrack1Title","track1Url","setTrack1Url","track1Cover","setTrack1Cover","track2Title","setTrack2Title","track2Url","setTrack2Url","track2Cover","setTrack2Cover","track3Title","setTrack3Title","track3Url","setTrack3Url","track3Cover","setTrack3Cover","track4Title","setTrack4Title","track4Url","setTrack4Url","track4Cover","setTrack4Cover","track5Title","setTrack5Title","track5Url","setTrack5Url","track5Cover","setTrack5Cover","search","searchArtists","body","artists","items","error","selectArtist","e","id","target","getAttribute","artist","external_urls","spotify","images","url","getArtistTopTracks","counter","i","length","preview_url","album","value","onChange","onClick","map","_id","marker","style","listStyle","htmlFor","type","songTitle","cover","requestBody","ArtistProfile","props","match","params","setArtist","get","history","src","href","track","controls","MapMarker","to","width","height","borderRadius","position","top","left","transform","Map","allArtists","setAllArtists","zoom","viewport","setViewport","filterMenuOpen","mapboxApiAccessToken","mapStyle","onViewportChange","transitionDuration","transitionInterpolator","FlyToInterpolator","maxBounds","coordinates","App","className","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31c2bc0f.chunk.js","sourcesContent":["import React from 'react'\nimport {useEffect, useState} from 'react'\nimport axios from 'axios'\nconst SpotifyWebApi =  require('spotify-web-api-node')\n\nfunction AddArtist() {\n    const API_URL = 'http://localhost:5005';\n    \n    //spotify api\n    const CLIENT_ID = \"dca951119d9442adaff3bb0c8ba9cf43\"\n    const CLIENT_SECRET = \"0693cad954e1458fb57095a8328420ac\"\n\n    const [token, setToken] = useState(\"\")\n\n    useEffect(() => {\n        const serialize = function(obj) {\n            var str = [];\n            for (var p in obj) {\n                if (obj.hasOwnProperty(p)) {\n                    str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n                }\n            }\n            return str.join(\"&\");\n        }\n    \n        axios\n            .post('https://accounts.spotify.com/api/token',\n                serialize({\n                    grant_type: 'client_credentials'\n                }), {\n                headers: {\n                    'Authorization': 'Basic ' + btoa(CLIENT_ID + ':' + CLIENT_SECRET),\n                }\n            })\n            .then(res => setToken(res.data.access_token))\n            .catch(err => {\n                console.log(err);\n            });\n        }, [])\n\n    const spotifApi = new SpotifyWebApi({\n        clientId : CLIENT_ID, \n        clientSecret : CLIENT_SECRET\n    })\n\n    spotifApi.setAccessToken(`${token}`)\n\n\n\n\n    const [searchQ, setSearchQ] = useState(\"\")\n    const [searchSucess, setSearchSucess] = useState(false)\n    const [searchResults, setSearchResults] = useState([])\n    const [artistSelected, setArtistSelected] = useState(false)\n    const [artistSelected1, setArtistSelected1] = useState(false)\n    \n    //artist model\n    const [longitude, setLongitude] = useState('')\n    const [latitude, setLatitude] = useState('')\n    const [name, setName] = useState(\"\")\n    const [discription, setDiscription] = useState(\"\")\n    const [picture, setPicture] = useState(\"\")\n    const [popularity, setPopularity] = useState(Number)\n    const [spotifyLink, setSpotifyLink] = useState(\"\")\n    const [tracks, setTracks] = useState([])\n    \n    //tracks\n    const [track1Title, setTrack1Title] = useState(\"\")\n    const [track1Url, setTrack1Url] = useState(\"\")\n    const [track1Cover, setTrack1Cover] = useState(\"\")\n\n    const [track2Title, setTrack2Title] = useState(\"\")\n    const [track2Url, setTrack2Url] = useState(\"\")\n    const [track2Cover, setTrack2Cover] = useState(\"\")\n\n    const [track3Title, setTrack3Title] = useState(\"\")\n    const [track3Url, setTrack3Url] = useState(\"\")\n    const [track3Cover, setTrack3Cover] = useState(\"\")\n\n    const [track4Title, setTrack4Title] = useState(\"\")\n    const [track4Url, setTrack4Url] = useState(\"\")\n    const [track4Cover, setTrack4Cover] = useState(\"\")\n\n    const [track5Title, setTrack5Title] = useState(\"\")\n    const [track5Url, setTrack5Url] = useState(\"\")\n    const [track5Cover, setTrack5Cover] = useState(\"\")\n\n\n\n    const search = () => {\n        //spotify api\n        spotifApi.searchArtists(searchQ)\n            .then(function(data) {\n                console.log(data.body.artists.items)\n                setSearchResults(data.body.artists.items)\n            }, function (err) {\n                console.error(err)\n            })\n\n            setSearchSucess(true)  \n   }\n        \n    \n    const selectArtist = (e) => {\n        var id = e.target.getAttribute(\"marker\")\n        for (let artist of searchResults){\n            if(artist.id === id){\n                setName(artist.name)\n                setSpotifyLink(artist.external_urls.spotify)\n                setPopularity(artist.popularity)\n                setPicture(artist.images[0].url)\n            }\n        }\n        \n        setSearchSucess(false)\n        setArtistSelected(true)\n\n        //get top tracks \n        spotifApi.getArtistTopTracks(id, \"DE\")\n            .then(function(data) {\n                console.log(data)\n                let counter = 0\n                for (let i = 0; i < data.body.tracks.length; i++ ){\n                    if(data.body.tracks[i].preview_url !== null && counter === 0){\n                        counter++\n                        setTrack1Title(data.body.tracks[i].name)\n                        setTrack1Url(data.body.tracks[i].preview_url)\n                        setTrack1Cover(data.body.tracks[i].album.images[0].url)\n\n                    } else if (data.body.tracks[i].preview_url !== null && counter === 1){\n                        counter++\n                        setTrack2Title(data.body.tracks[i].name)\n                        setTrack2Url(data.body.tracks[i].preview_url)\n                        setTrack2Cover(data.body.tracks[i].album.images[0].url)\n\n                    } else if (data.body.tracks[i].preview_url !== null && counter === 2){\n                        counter++\n                        setTrack3Title(data.body.tracks[i].name)\n                        setTrack3Url(data.body.tracks[i].preview_url)\n                        setTrack3Cover(data.body.tracks[i].album.images[0].url)\n\n                    } else if (data.body.tracks[i].preview_url !== null && counter === 3){\n                        counter++\n                        setTrack4Title(data.body.tracks[i].name)\n                        setTrack4Url(data.body.tracks[i].preview_url)\n                        setTrack4Cover(data.body.tracks[i].album.images[0].url)\n\n                    } else if (data.body.tracks[i].preview_url !== null && counter === 4){\n                        counter++\n                        setTrack5Title(data.body.tracks[i].name)\n                        setTrack5Url(data.body.tracks[i].preview_url)\n                        setTrack5Cover(data.body.tracks[i].album.images[0].url)\n                    \n                    }\n\n                    if(counter === 5){\n                        break;\n                    }\n                }\n            })\n    }\n\n    const confirmArtist = () => {\n        var topTracks = [\n           \n            {\n                songTitle : track1Title,\n                url : track1Url,\n                cover : track1Cover\n            },\n\n            {\n                songTitle : track2Title,\n                url : track2Url,\n                cover : track2Cover\n            },\n\n            {\n                songTitle : track3Title,\n                url : track3Url,\n                cover : track3Cover\n            },\n\n            {\n                songTitle : track4Title,\n                url : track4Url,\n                cover : track4Cover\n            },\n\n            {\n               songTitle : track5Title,\n                url : track5Url,\n                cover : track5Cover\n            },\n        ]\n        setTracks(topTracks)\n        setArtistSelected1(true)\n\n    }\n\n    const addArtist = () => {\n\n        const requestBody = {longitude, latitude, name, discription, picture, popularity, spotifyLink, tracks}\n        axios.post(`${API_URL}/api/addArtist`, requestBody)\n            .then(\n                //reset all the input fields\n            )\n        \n        }\n    \n    \n\n    \n\n    if(searchSucess === false && artistSelected === false){\n        return (\n            <div>\n                <label>search spotify</label>\n                <input \n                    value={searchQ}\n                    onChange={e => setSearchQ(e.target.value)}>\n\n                </input>\n\n                <button onClick={search}>search</button>\n            </div>\n        )\n    } \n    \n    if (searchSucess === true && artistSelected === false){\n        return (\n            <div>\n                <label>search spotify</label>\n                <input \n                    value={searchQ}\n                    onChange={e => setSearchQ(e.target.value)}>\n\n                </input>\n\n                <button onClick={search}>search</button>\n\n\n                <h3>results</h3>\n\n                {searchResults.map(artist => {\n                        return (\n                            <div>\n                                <li onClick={selectArtist} id={artist._id} marker={artist.id} style={{listStyle : 'none'}}>\n                                    {artist.name}\n                                </li>                            \n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n\n    if (artistSelected === true){\n      return (\n          <div>\n            <h2>spotify added</h2>\n            <label htmlFor=\"longitude\">longitude of artist (13, ...)</label>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"longitude\"\n\t\t\t\tvalue={longitude}\n\t\t\t\tonChange={e => setLongitude(e.target.value)}\n\t\t\t/>\n\n            <label htmlFor=\"latitude\">latitude of artist (52, ... )</label>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"latitude\"\n\t\t\t\tvalue={latitude}\n\t\t\t\tonChange={e => setLatitude(e.target.value)}\n\t\t\t/>\n\n            <button onClick={confirmArtist}>confirm</button>\n            <button onClick={addArtist}>add artist</button>\n          </div>\n      )   \n    }\n}\n\nexport default AddArtist\n","import React from 'react'\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nfunction ArtistProfile(props) {\n\n    const API_URL = 'http://localhost:5005'\n    const id = props.match.params.id\n\n    //artist data\n    const [artist, setArtist] = useState({})\n    const [tracks, setTracks] = useState([])\n\n    const getArtist = () => {\n        axios.get(`${API_URL}/api/map/${id}`)\n        .then(res => {\n            setArtist(res.data)\n            setTracks(res.data.tracks)\n        })\n    }\n\n    useEffect(() => {\n        getArtist()\n    }, [])\n\n    const close = () => {\n        props.history.push('/map')\n    }\n\n\n    return (\n        <div>\n            <button onClick={close}>close</button>\n            <div id=\"porfileHeader\">\n                <img src={artist.picture} />\n                <h1>{artist.name}</h1>\n            </div>\n\n            <div id=\"spotifyLinkWrapper\">\n                <a href={artist.spotifyLink}>spotify</a>\n            </div>\n\n            <h3>tracks</h3>\n            {tracks.map(track => {\n                return (\n                    <div>\n                       <img src={track.cover} />\n                       <h4>{track.songTitle}</h4>\n                       <audio controls>\n                           <source src={track.url} />\n                       </audio>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ArtistProfile\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction MapMarker(props) {\n\n    const artist = props.props\n    const popularity = artist.popularity\n\n\n\n    const test = () => {\n        console.log(popularity)\n    }\n    return (\n        <div>\n            <Link to={`/map/${artist._id}`}>\n                <img src={props.props.picture} style={{width : popularity, height : popularity, borderRadius : 90}}/>\n                <h6 id=\"artistNameOnMap\" style={{position : \"absolute\" , top : \"50%\", left : \"50%\", transform : \"translate(-50%, -50%)\"}}>{artist.name}</h6>\n            </Link>\n        </div>\n    )\n}\n\nexport default MapMarker\n\n","import React from 'react'\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport ReactMapGl, {Marker, FlyToInterpolator, oldViewState} from \"react-map-gl\"\nimport { Link } from 'react-router-dom'\n\nimport MapMarker from '../components/MapMarker'\n\nfunction Map() {\n\n    //get all artist\n    const [allArtists, setAllArtists] = useState([])\n    const API_URL = 'http://localhost:5005';\n    \n    const getAllArtists = () => {\n        axios.get(`${API_URL}/api/map`)\n             .then(res => {\n                 console.log(res.data)\n                 setAllArtists(res.data)\n             })\n             .catch(err => console.log(err))\n    }\n    useEffect(() => {\n        getAllArtists()\n    }, [])\n\n\n    const berlinViewport = {\n        latitude : 52.520008, \n        longitude : 13.404954,\n        width : \"100w\",\n        height : \"100vh\",\n        zoom : 9,\n    }\n\n    const [viewport, setViewport] = useState(berlinViewport)\n    const [filterMenuOpen, setFilterMenuOpen] = useState(false)\n\n    const toBerlin = () => {\n        setViewport({\n          ...viewport,\n          latitude : 52.520008, \n          longitude : 13.404954,\n          zoom: 9,\n          transitionDuration: 2500,\n          transitionInterpolator: new FlyToInterpolator(),\n          maxBounds : [\n            [52.618055017661746, 13.281432243318726],\n            [52.44320131994233, 13.608753967903874],\n        ]\n        });\n      };\n\n    const toVienna = () => {\n        setViewport({\n          ...viewport,\n          latitude : 48.21377358548916, \n          longitude : 16.369123862931218,\n          zoom: 9,\n          transitionDuration: 2500,\n          transitionInterpolator: new FlyToInterpolator(),\n        })\n    }\n\n    const toParis = () => {\n        setViewport({\n          ...viewport,\n          latitude : 48.863121054457444,   \n          longitude : 2.347349831835786,\n          zoom: 9,\n          transitionDuration: 2500,\n          transitionInterpolator: new FlyToInterpolator(),\n        })\n    }\n\n    const toRome = () => {\n        setViewport({\n          ...viewport,\n          latitude : 41.91434431977642,  \n          longitude : 12.505372936264408,\n          zoom: 9,\n          transitionDuration: 2500,\n          transitionInterpolator: new FlyToInterpolator(),\n        })\n    }\n\n    const toLondon = () => {\n        setViewport({\n          ...viewport,\n          latitude : 51.51507257643926,  \n          longitude : -0.10657974791901607,\n          zoom: 9,\n          transitionDuration: 2500,\n          transitionInterpolator: new FlyToInterpolator(),\n        })\n    }\n\n    const toMadrid = () => {\n        setViewport({\n          ...viewport,\n          latitude : 40.42447458233723, \n          longitude : -3.696949038371607,\n          zoom: 9,\n          transitionDuration: 2500,\n          transitionInterpolator: new FlyToInterpolator(),\n        })\n    }\n\n\n   if (filterMenuOpen === false){\n       return (\n           <div id=\"map\">\n               <ReactMapGl\n                    {...viewport}\n                    mapboxApiAccessToken = \"pk.eyJ1Ijoiam9vc3R3bWQiLCJhIjoiY2t1NDQ3NmJqMXRwbzJwcGM5a3FuY3B3dCJ9.yyon_mO5Y9sI1WgD-XFDRQ\"\n                    mapStyle=\"mapbox://styles/joostwmd/ckvwifepf21kj15pflu8gbkdd\"\n                    onViewportChange={viewport => {\n                        setViewport(viewport)\n                    }}\n\n                    \n                >\n                <div id=\"header\">\n                    <button onClick={toBerlin}>berlin</button>\n                    <button onClick={toVienna}>wien</button>\n                    <button onClick={toParis}>paris</button>\n                    <button onClick={toRome}>rom</button>\n                    <button onClick={toLondon}>london</button>\n                    <button onClick={toMadrid}>madrid</button>\n                    {/* <button onClick={openFilterMenu}>open filter</button> */}\n                </div>\n\n                {allArtists.map(artist => {\n                    return (\n                        <Marker\n                            latitude={artist.coordinates[1]}\n                            longitude={artist.coordinates[0]}\n                        >\n                            <MapMarker props={artist} />\n                            {/* <Link to={`/map/${artist._id}`}>\n                                <h4>{artist.name}</h4>\n                            </Link> */}\n                        </Marker>\n                    )\n                })}\n\n\n                </ReactMapGl>\n           </div>\n       )\n   }\n}\n\nexport default Map\n","import './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n\nimport AddArtist from './pages/AddArtist';\nimport ArtistProfile from './pages/ArtistProfile';\nimport Map from './pages/Map';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/map\" component={Map} />\n          <Route exact path=\"/addArtist\" component={AddArtist} />\n          <Route exact path=\"/map/:id\" render={props => <ArtistProfile {...props} />} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}